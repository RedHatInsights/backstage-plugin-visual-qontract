{"version":3,"file":"static/2925.70b397e3.chunk.js","mappings":"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","sources":["webpack://internal.backstage-plugin-hello-entity/../../node_modules/react-virtualized-auto-sizer/dist/react-virtualized-auto-sizer.esm.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/react-window/dist/index.esm.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/linkifyjs/dist/linkify.es.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/linkify-react/dist/linkify-react.es.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/@backstage/core-components/dist/esm/RealLogViewer-ByaGXy8y.esm.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/@backstage/core-components/node_modules/ansi-regex/index.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/@react-hookz/web/src/useToggle/index.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/@react-hookz/web/src/useSyncedRef/index.js","webpack://internal.backstage-plugin-hello-entity/../../node_modules/@react-hookz/web/src/util/resolveHookState.js"],"sourcesContent":["import { Component, createElement } from 'react';\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Use 'export' statement over 'module.exports' assignment\n **/\n\n// Check `document` and `window` in case of server-side rendering\nlet windowObject;\nif (typeof window !== \"undefined\") {\n  windowObject = window;\n\n  // eslint-disable-next-line no-restricted-globals\n} else if (typeof self !== \"undefined\") {\n  // eslint-disable-next-line no-restricted-globals\n  windowObject = self;\n} else {\n  windowObject = global;\n}\nlet cancelFrame = null;\nlet requestFrame = null;\nconst TIMEOUT_DURATION = 20;\nconst clearTimeoutFn = windowObject.clearTimeout;\nconst setTimeoutFn = windowObject.setTimeout;\nconst cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;\nconst requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;\nif (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {\n  // For environments that don't support animation frame,\n  // fallback to a setTimeout based approach.\n  cancelFrame = clearTimeoutFn;\n  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {\n    return setTimeoutFn(callback, TIMEOUT_DURATION);\n  };\n} else {\n  // Counter intuitively, environments that support animation frames can be trickier.\n  // Chrome's \"Throttle non-visible cross-origin iframes\" flag can prevent rAFs from being called.\n  // In this case, we should fallback to a setTimeout() implementation.\n  cancelFrame = function cancelFrame([animationFrameID, timeoutID]) {\n    cancelAnimationFrameFn(animationFrameID);\n    clearTimeoutFn(timeoutID);\n  };\n  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {\n    const animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {\n      clearTimeoutFn(timeoutID);\n      callback();\n    });\n    const timeoutID = setTimeoutFn(function timeoutCallback() {\n      cancelAnimationFrameFn(animationFrameID);\n      callback();\n    }, TIMEOUT_DURATION);\n    return [animationFrameID, timeoutID];\n  };\n}\nfunction createDetectElementResize(nonce) {\n  let animationKeyframes;\n  let animationName;\n  let animationStartEvent;\n  let animationStyle;\n  let checkTriggers;\n  let resetTriggers;\n  let scrollListener;\n  const attachEvent = typeof document !== \"undefined\" && document.attachEvent;\n  if (!attachEvent) {\n    resetTriggers = function (element) {\n      const triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + \"px\";\n      expandChild.style.height = expand.offsetHeight + 1 + \"px\";\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n    checkTriggers = function (element) {\n      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;\n    };\n    scrollListener = function (e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === \"function\" && e.target.className.indexOf(\"contract-trigger\") < 0 && e.target.className.indexOf(\"expand-trigger\") < 0) {\n        return;\n      }\n      const element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function animationFrame() {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    let animation = false;\n    let keyframeprefix = \"\";\n    animationStartEvent = \"animationstart\";\n    const domPrefixes = \"Webkit Moz O ms\".split(\" \");\n    let startEvents = \"webkitAnimationStart animationstart oAnimationStart MSAnimationStart\".split(\" \");\n    let pfx = \"\";\n    {\n      const elm = document.createElement(\"fakeelement\");\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n      if (animation === false) {\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + \"AnimationName\"] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = \"-\" + pfx.toLowerCase() + \"-\";\n            animationStartEvent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    animationName = \"resizeanim\";\n    animationKeyframes = \"@\" + keyframeprefix + \"keyframes \" + animationName + \" { from { opacity: 0; } to { opacity: 0; } } \";\n    animationStyle = keyframeprefix + \"animation: 1ms \" + animationName + \"; \";\n  }\n  const createStyles = function (doc) {\n    if (!doc.getElementById(\"detectElementResize\")) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      const css = (animationKeyframes ? animationKeyframes : \"\") + \".resize-triggers { \" + (animationStyle ? animationStyle : \"\") + \"visibility: hidden; opacity: 0; } \" + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n        head = doc.head || doc.getElementsByTagName(\"head\")[0],\n        style = doc.createElement(\"style\");\n      style.id = \"detectElementResize\";\n      style.type = \"text/css\";\n      if (nonce != null) {\n        style.setAttribute(\"nonce\", nonce);\n      }\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n      head.appendChild(style);\n    }\n  };\n  const addResizeListener = function (element, fn) {\n    if (attachEvent) {\n      element.attachEvent(\"onresize\", fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        const doc = element.ownerDocument;\n        const elementStyle = windowObject.getComputedStyle(element);\n        if (elementStyle && elementStyle.position === \"static\") {\n          element.style.position = \"relative\";\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement(\"div\")).className = \"resize-triggers\";\n        const expandTrigger = doc.createElement(\"div\");\n        expandTrigger.className = \"expand-trigger\";\n        expandTrigger.appendChild(doc.createElement(\"div\"));\n        const contractTrigger = doc.createElement(\"div\");\n        contractTrigger.className = \"contract-trigger\";\n        element.__resizeTriggers__.appendChild(expandTrigger);\n        element.__resizeTriggers__.appendChild(contractTrigger);\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener(\"scroll\", scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationStartEvent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName === animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n  const removeResizeListener = function (element, fn) {\n    if (attachEvent) {\n      element.detachEvent(\"onresize\", fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener(\"scroll\", scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}\n\nclass AutoSizer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      height: this.props.defaultHeight || 0,\n      scaledHeight: this.props.defaultHeight || 0,\n      scaledWidth: this.props.defaultWidth || 0,\n      width: this.props.defaultWidth || 0\n    };\n    this._autoSizer = null;\n    this._detectElementResize = null;\n    this._parentNode = null;\n    this._resizeObserver = null;\n    this._timeoutId = null;\n    this._onResize = () => {\n      this._timeoutId = null;\n      const {\n        disableHeight,\n        disableWidth,\n        onResize\n      } = this.props;\n      if (this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        const style = window.getComputedStyle(this._parentNode) || {};\n        const paddingLeft = parseFloat(style.paddingLeft || \"0\");\n        const paddingRight = parseFloat(style.paddingRight || \"0\");\n        const paddingTop = parseFloat(style.paddingTop || \"0\");\n        const paddingBottom = parseFloat(style.paddingBottom || \"0\");\n        const rect = this._parentNode.getBoundingClientRect();\n        const scaledHeight = rect.height - paddingTop - paddingBottom;\n        const scaledWidth = rect.width - paddingLeft - paddingRight;\n        const height = this._parentNode.offsetHeight - paddingTop - paddingBottom;\n        const width = this._parentNode.offsetWidth - paddingLeft - paddingRight;\n        if (!disableHeight && (this.state.height !== height || this.state.scaledHeight !== scaledHeight) || !disableWidth && (this.state.width !== width || this.state.scaledWidth !== scaledWidth)) {\n          this.setState({\n            height,\n            width,\n            scaledHeight,\n            scaledWidth\n          });\n          if (typeof onResize === \"function\") {\n            onResize({\n              height,\n              scaledHeight,\n              scaledWidth,\n              width\n            });\n          }\n        }\n      }\n    };\n    this._setRef = autoSizer => {\n      this._autoSizer = autoSizer;\n    };\n  }\n  componentDidMount() {\n    const {\n      nonce\n    } = this.props;\n    const parentNode = this._autoSizer ? this._autoSizer.parentNode : null;\n    if (parentNode != null && parentNode.ownerDocument && parentNode.ownerDocument.defaultView && parentNode instanceof parentNode.ownerDocument.defaultView.HTMLElement) {\n      // Delay access of parentNode until mount.\n      // This handles edge-cases where the component has already been unmounted before its ref has been set,\n      // As well as libraries like react-lite which have a slightly different lifecycle.\n      this._parentNode = parentNode;\n\n      // Use ResizeObserver from the same context where parentNode (which we will observe) was defined\n      // Using just global can result into onResize events not being emitted in cases with multiple realms\n      const ResizeObserverInstance = parentNode.ownerDocument.defaultView.ResizeObserver;\n      if (ResizeObserverInstance != null) {\n        this._resizeObserver = new ResizeObserverInstance(() => {\n          // Guard against \"ResizeObserver loop limit exceeded\" error;\n          // could be triggered if the state update causes the ResizeObserver handler to run long.\n          // See https://github.com/bvaughn/react-virtualized-auto-sizer/issues/55\n          this._timeoutId = setTimeout(this._onResize, 0);\n        });\n        this._resizeObserver.observe(parentNode);\n      } else {\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(parentNode, this._onResize);\n      }\n      this._onResize();\n    }\n  }\n  componentWillUnmount() {\n    if (this._parentNode) {\n      if (this._detectElementResize) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n      if (this._timeoutId !== null) {\n        clearTimeout(this._timeoutId);\n      }\n      if (this._resizeObserver) {\n        this._resizeObserver.disconnect();\n      }\n    }\n  }\n  render() {\n    const {\n      children,\n      defaultHeight,\n      defaultWidth,\n      disableHeight = false,\n      disableWidth = false,\n      doNotBailOutOnEmptyChildren = false,\n      nonce,\n      onResize,\n      style = {},\n      tagName = \"div\",\n      ...rest\n    } = this.props;\n    const {\n      height,\n      scaledHeight,\n      scaledWidth,\n      width\n    } = this.state;\n\n    // Outer div should not force width/height since that may prevent containers from shrinking.\n    // Inner component should overflow and use calculated width/height.\n    // See issue #68 for more information.\n    const outerStyle = {\n      overflow: \"visible\"\n    };\n    const childParams = {};\n\n    // Avoid rendering children before the initial measurements have been collected.\n    // At best this would just be wasting cycles.\n    let bailoutOnChildren = false;\n    if (!disableHeight) {\n      if (height === 0) {\n        bailoutOnChildren = true;\n      }\n      outerStyle.height = 0;\n      childParams.height = height;\n      childParams.scaledHeight = scaledHeight;\n    }\n    if (!disableWidth) {\n      if (width === 0) {\n        bailoutOnChildren = true;\n      }\n      outerStyle.width = 0;\n      childParams.width = width;\n      childParams.scaledWidth = scaledWidth;\n    }\n    if (doNotBailOutOnEmptyChildren) {\n      bailoutOnChildren = false;\n    }\n    return createElement(tagName, {\n      ref: this._setRef,\n      style: {\n        ...outerStyle,\n        ...style\n      },\n      ...rest\n    }, !bailoutOnChildren && children(childParams));\n  }\n}\n\nfunction isHeightAndWidthProps(props) {\n  return props && props.disableHeight !== true && props.disableWidth !== true;\n}\nfunction isHeightOnlyProps(props) {\n  return props && props.disableHeight !== true && props.disableWidth === true;\n}\nfunction isWidthOnlyProps(props) {\n  return props && props.disableHeight === true && props.disableWidth !== true;\n}\n\nexport { AutoSizer as default, isHeightAndWidthProps, isHeightOnlyProps, isWidthOnlyProps };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n","import * as React from 'react';\nimport { Options, options, tokenize } from 'linkifyjs';\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactNodeArray}\n */\nfunction stringToElements(str, opts, meta) {\n  const tokens = tokenize(str);\n  const elements = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      const key = `__linkify-el-${meta.elementId++}`;\n      elements.push(React.createElement('br', {\n        key\n      }));\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n    } else {\n      let rendered = opts.render(token);\n      if (!('key' in rendered.props)) {\n        // Ensure generated element has unique key\n        const key = `__linkify-el-${meta.elementId++}`;\n        const props = options.assign({\n          key\n        }, rendered.props);\n        rendered = React.cloneElement(rendered, props);\n      }\n      elements.push(rendered);\n    }\n  }\n  return elements;\n}\n\n// Recursively linkify the contents of the given React Element instance\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactElement<P, T>}\n */\nfunction linkifyReactElement(element, opts, meta) {\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n  const children = [];\n  React.Children.forEach(element.props.children, child => {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      children.push.apply(children, stringToElements(child, opts, meta));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, meta));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  });\n\n  // Set a default unique key, copy over remaining props\n  const key = `__linkify-el-${meta.elementId++}`;\n  const newProps = options.assign({\n    key\n  }, element.props);\n  return React.cloneElement(element, newProps, children);\n}\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { as?: T, tagName?: T, options?: import('linkifyjs').Opts, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\nconst Linkify = props => {\n  // Copy over all non-linkify-specific props\n  let linkId = 0;\n  const defaultLinkRender = _ref => {\n    let {\n      tagName,\n      attributes,\n      content\n    } = _ref;\n    attributes.key = `__linkify-lnk-${linkId++}`;\n    if (attributes.class) {\n      attributes.className = attributes.class;\n      delete attributes.class;\n    }\n    return React.createElement(tagName, attributes, content);\n  };\n  const newProps = {\n    key: '__linkify-wrapper'\n  };\n  for (const prop in props) {\n    if (prop !== 'options' && prop !== 'as' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n  const opts = new Options(props.options, defaultLinkRender);\n  const as = props.as || props.tagName || React.Fragment || 'span';\n  const children = props.children;\n  const element = React.createElement(as, newProps, children);\n  return linkifyReactElement(element, opts, {\n    elementId: 0\n  });\n};\n\nexport { Linkify as default };\n","import Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport classNames from 'classnames';\nimport React, { useMemo, useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList } from 'react-window';\nimport ansiRegexMaker from 'ansi-regex';\nimport startCase from 'lodash/startCase';\nimport Linkify from 'linkify-react';\nimport { Link } from '../index.esm.js';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FilterList from '@material-ui/icons/FilterList';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport * as colors from '@material-ui/core/colors';\nimport { useToggle } from '@react-hookz/web';\nimport { useApi, errorApiRef } from '@backstage/core-plugin-api';\nimport useCopyToClipboard from 'react-use/esm/useCopyToClipboard';\nimport '@backstage/core-plugin-api/alpha';\nimport '@material-ui/core/Snackbar';\nimport '@material-ui/icons/Close';\nimport '@material-ui/lab/Alert';\nimport './translation-p8_bRQW1.esm.js';\nimport 'react-idle-timer';\nimport '@material-ui/core/Button';\nimport '@material-ui/core/Dialog';\nimport '@material-ui/core/DialogActions';\nimport '@material-ui/core/DialogContent';\nimport '@material-ui/core/DialogContentText';\nimport '@material-ui/core/DialogTitle';\nimport '@material-ui/core/Avatar';\nimport '@material-ui/core/Link';\nimport 'lodash';\nimport 'react-syntax-highlighter/dist/esm/light-async';\nimport 'react-syntax-highlighter/dist/esm/styles/hljs/dark';\nimport 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\nimport '@material-ui/core/Tooltip';\nimport '@material-ui/core/useMediaQuery';\nimport '@material-ui/icons/AddCircleOutline';\nimport 'd3-zoom';\nimport 'd3-selection';\nimport '@material-ui/core/styles/useTheme';\nimport 'dagre';\nimport 'lodash/debounce';\nimport '@material-ui/core/styles/makeStyles';\nimport 'd3-shape';\nimport 'lodash/isFinite';\nimport 'react-use/esm/useObservable';\nimport '@material-ui/core/SnackbarContent';\nimport '@material-ui/core/Grid';\nimport '../components/EmptyState/assets/missingAnnotation.svg';\nimport '../components/EmptyState/assets/noInformation.svg';\nimport '../components/EmptyState/assets/createComponent.svg';\nimport '../components/EmptyState/assets/noBuild.svg';\nimport '@material-ui/core/List';\nimport '@material-ui/core/ListItem';\nimport '@material-ui/core/ListItemText';\nimport '@material-ui/core/Accordion';\nimport '@material-ui/core/AccordionSummary';\nimport '@material-ui/core/AccordionDetails';\nimport '@material-ui/icons/ErrorOutline';\nimport '@material-ui/icons/ExpandMore';\nimport 'react-markdown';\nimport 'remark-gfm';\nimport '@material-ui/core/Divider';\nimport '@material-ui/core/ClickAwayListener';\nimport 'react-dom';\nimport '@material-ui/icons/Link';\nimport '@material-ui/core/ListItemAvatar';\nimport '@backstage/errors';\nimport 'react-text-truncate';\nimport '@material-ui/core/LinearProgress';\nimport '@material-ui/core/Card';\nimport '@material-ui/core/CardActions';\nimport '@material-ui/core/CardContent';\nimport '@material-ui/core/CardHeader';\nimport '@material-ui/icons/ArrowForward';\nimport 'rc-progress';\nimport '@material-ui/core/Checkbox';\nimport '@material-ui/core/Chip';\nimport '@material-ui/core/FormControl';\nimport '@material-ui/core/InputBase';\nimport '@material-ui/core/InputLabel';\nimport '@material-ui/core/MenuItem';\nimport '@material-ui/core/Select';\nimport '@material-ui/core/SvgIcon';\nimport '@material-ui/core/Stepper';\nimport '@material-ui/core/Step';\nimport '@material-ui/core/StepContent';\nimport '@material-ui/core/StepLabel';\nimport '@material-ui/core/Table';\nimport '@material-ui/core/TableBody';\nimport '@material-ui/core/TableCell';\nimport '@material-ui/core/TableRow';\nimport '@material-ui/core/ListItemIcon';\nimport '@material-ui/core/MenuList';\nimport '@material-ui/core/Popover';\nimport 'qs';\nimport '@material-ui/icons/BrokenImage';\nimport 'react-helmet';\nimport '@material-ui/core/Tab';\nimport '@material-ui/core/Tabs';\nimport '@material-table/core';\nimport '@material-ui/icons/AddBox';\nimport '@material-ui/icons/ArrowUpward';\nimport '@material-ui/icons/Check';\nimport '@material-ui/icons/Clear';\nimport '@material-ui/icons/DeleteOutline';\nimport '@material-ui/icons/Edit';\nimport '@material-ui/icons/FirstPage';\nimport '@material-ui/icons/LastPage';\nimport '@material-ui/icons/Remove';\nimport '@material-ui/icons/SaveAlt';\nimport '@material-ui/icons/ViewColumn';\nimport '@material-ui/core/CircularProgress';\nimport 'react-sparklines';\nimport '../layout/ErrorPage/mic-drop.svg';\nimport '@material-ui/core/Breadcrumbs';\nimport '@material-ui/core/BottomNavigation';\nimport '@material-ui/core/Drawer';\nimport '@material-ui/icons/Menu';\nimport '@backstage/version-bridge';\nimport '@material-ui/core/BottomNavigationAction';\nimport '@material-ui/icons/ArrowDropDown';\nimport '@material-ui/icons/ArrowDropUp';\nimport '@material-ui/core/Badge';\nimport '@material-ui/icons/ArrowRight';\nimport '@material-ui/icons/Search';\nimport '@material-ui/icons/ArrowBackIos';\nimport '@material-ui/icons/ArrowForwardIos';\nimport '@material-ui/icons/MoreVert';\nimport '@material-ui/core/CardMedia';\nimport 'zod';\nimport 'react-use/esm/useLocalStorage';\nimport 'react-hook-form';\nimport '@material-ui/core/FormHelperText';\nimport 'lodash/isEmpty';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst ansiRegex = ansiRegexMaker();\nconst newlineRegex = /\\n\\r?/g;\nconst codeModifiers = Object.fromEntries(\n  Object.entries({\n    1: (m) => ({ ...m, bold: true }),\n    3: (m) => ({ ...m, italic: true }),\n    4: (m) => ({ ...m, underline: true }),\n    22: ({ bold: _, ...m }) => m,\n    23: ({ italic: _, ...m }) => m,\n    24: ({ underline: _, ...m }) => m,\n    30: (m) => ({ ...m, foreground: \"black\" }),\n    31: (m) => ({ ...m, foreground: \"red\" }),\n    32: (m) => ({ ...m, foreground: \"green\" }),\n    33: (m) => ({ ...m, foreground: \"yellow\" }),\n    34: (m) => ({ ...m, foreground: \"blue\" }),\n    35: (m) => ({ ...m, foreground: \"magenta\" }),\n    36: (m) => ({ ...m, foreground: \"cyan\" }),\n    37: (m) => ({ ...m, foreground: \"white\" }),\n    39: ({ foreground: _, ...m }) => m,\n    90: (m) => ({ ...m, foreground: \"grey\" }),\n    40: (m) => ({ ...m, background: \"black\" }),\n    41: (m) => ({ ...m, background: \"red\" }),\n    42: (m) => ({ ...m, background: \"green\" }),\n    43: (m) => ({ ...m, background: \"yellow\" }),\n    44: (m) => ({ ...m, background: \"blue\" }),\n    45: (m) => ({ ...m, background: \"magenta\" }),\n    46: (m) => ({ ...m, background: \"cyan\" }),\n    47: (m) => ({ ...m, background: \"white\" }),\n    49: ({ background: _, ...m }) => m\n  }).map(\n    ([code, modifier]) => [`\\x1B[${code}m`, modifier]\n  )\n);\nclass AnsiLine {\n  constructor(lineNumber = 1, chunks = []) {\n    this.lineNumber = lineNumber;\n    this.chunks = chunks;\n    __publicField(this, \"text\");\n    this.text = chunks.map((c) => c.text).join(\"\").toLocaleLowerCase(\"en-US\");\n  }\n  lastChunk() {\n    return this.chunks[this.chunks.length - 1];\n  }\n  replaceLastChunk(newChunks) {\n    if (newChunks) {\n      this.chunks.splice(this.chunks.length - 1, 1, ...newChunks);\n      this.text = this.chunks.map((c) => c.text).join(\"\").toLocaleLowerCase(\"en-US\");\n    }\n  }\n}\nclass AnsiProcessor {\n  constructor() {\n    __publicField(this, \"text\", \"\");\n    __publicField(this, \"lines\", []);\n    // Split a chunk of text up into lines and process each line individually\n    __publicField(this, \"processLines\", (text, modifiers = {}, startingLineNumber = 1) => {\n      var _a;\n      const lines = [];\n      let currentModifiers = modifiers;\n      let currentLineNumber = startingLineNumber;\n      let prevIndex = 0;\n      newlineRegex.lastIndex = 0;\n      for (; ; ) {\n        const match = newlineRegex.exec(text);\n        if (!match) {\n          const chunks2 = this.processText(\n            text.slice(prevIndex),\n            currentModifiers\n          );\n          lines.push(new AnsiLine(currentLineNumber, chunks2));\n          return lines;\n        }\n        const line = text.slice(prevIndex, match.index);\n        prevIndex = match.index + match[0].length;\n        const chunks = this.processText(line, currentModifiers);\n        lines.push(new AnsiLine(currentLineNumber, chunks));\n        currentModifiers = (_a = chunks[chunks.length - 1].modifiers) != null ? _a : currentModifiers;\n        currentLineNumber += 1;\n      }\n    });\n    // Processing of a one individual text chunk\n    __publicField(this, \"processText\", (fullText, modifiers) => {\n      const chunks = [];\n      let currentModifiers = modifiers;\n      let prevIndex = 0;\n      ansiRegex.lastIndex = 0;\n      for (; ; ) {\n        const match = ansiRegex.exec(fullText);\n        if (!match) {\n          chunks.push({\n            text: fullText.slice(prevIndex),\n            modifiers: currentModifiers\n          });\n          return chunks;\n        }\n        const text = fullText.slice(prevIndex, match.index);\n        chunks.push({ text, modifiers: currentModifiers });\n        prevIndex = match.index + match[0].length;\n        currentModifiers = this.processCode(match[0], currentModifiers);\n      }\n    });\n    __publicField(this, \"processCode\", (code, modifiers) => {\n      var _a, _b;\n      return (_b = (_a = codeModifiers[code]) == null ? void 0 : _a.call(codeModifiers, modifiers)) != null ? _b : modifiers;\n    });\n  }\n  /**\n   * Processes a chunk of text while keeping internal state that optimizes\n   * subsequent processing that appends to the text.\n   */\n  process(text) {\n    var _a, _b, _c;\n    if (this.text === text) {\n      return this.lines;\n    }\n    if (this.text && text.startsWith(this.text)) {\n      const lastLineIndex = this.lines.length > 0 ? this.lines.length - 1 : 0;\n      const lastLine = (_a = this.lines[lastLineIndex]) != null ? _a : new AnsiLine();\n      const lastChunk = lastLine.lastChunk();\n      const newLines = this.processLines(\n        ((_b = lastChunk == null ? void 0 : lastChunk.text) != null ? _b : \"\") + text.slice(this.text.length),\n        lastChunk == null ? void 0 : lastChunk.modifiers,\n        lastLine == null ? void 0 : lastLine.lineNumber\n      );\n      lastLine.replaceLastChunk((_c = newLines[0]) == null ? void 0 : _c.chunks);\n      this.lines[lastLineIndex] = lastLine;\n      this.lines = this.lines.concat(newLines.slice(1));\n    } else {\n      this.lines = this.processLines(text);\n    }\n    this.text = text;\n    return this.lines;\n  }\n}\n\nfunction getModifierClasses(classes, modifiers) {\n  const classNames = new Array();\n  if (modifiers.bold) {\n    classNames.push(classes.modifierBold);\n  }\n  if (modifiers.italic) {\n    classNames.push(classes.modifierItalic);\n  }\n  if (modifiers.underline) {\n    classNames.push(classes.modifierUnderline);\n  }\n  if (modifiers.foreground) {\n    const key = `modifierForeground${startCase(\n      modifiers.foreground\n    )}`;\n    classNames.push(classes[key]);\n  }\n  if (modifiers.background) {\n    const key = `modifierBackground${startCase(\n      modifiers.background\n    )}`;\n    classNames.push(classes[key]);\n  }\n  return classNames.length > 0 ? classNames.join(\" \") : void 0;\n}\nfunction findSearchResults(text, searchText) {\n  if (!searchText || !text.includes(searchText)) {\n    return void 0;\n  }\n  const searchResults = new Array();\n  let offset = 0;\n  for (; ; ) {\n    const start = text.indexOf(searchText, offset);\n    if (start === -1) {\n      break;\n    }\n    const end = start + searchText.length;\n    searchResults.push({ start, end });\n    offset = end;\n  }\n  return searchResults;\n}\nfunction calculateHighlightedChunks(line, searchText) {\n  const results = findSearchResults(line.text, searchText);\n  if (!results) {\n    return line.chunks;\n  }\n  const chunks = new Array();\n  let lineOffset = 0;\n  let resultIndex = 0;\n  let result = results[resultIndex];\n  for (const chunk of line.chunks) {\n    const { text, modifiers } = chunk;\n    if (!result || lineOffset + text.length < result.start) {\n      chunks.push(chunk);\n      lineOffset += text.length;\n      continue;\n    }\n    let localOffset = 0;\n    while (result) {\n      const localStart = Math.max(result.start - lineOffset, 0);\n      if (localStart > text.length) {\n        break;\n      }\n      const localEnd = Math.min(result.end - lineOffset, text.length);\n      const hasTextBeforeResult = localStart > localOffset;\n      if (hasTextBeforeResult) {\n        chunks.push({ text: text.slice(localOffset, localStart), modifiers });\n      }\n      const hasResultText = localEnd > localStart;\n      if (hasResultText) {\n        chunks.push({\n          modifiers,\n          highlight: resultIndex,\n          text: text.slice(localStart, localEnd)\n        });\n      }\n      localOffset = localEnd;\n      const foundCompleteResult = result.end - lineOffset === localEnd;\n      if (foundCompleteResult) {\n        resultIndex += 1;\n        result = results[resultIndex];\n      } else {\n        break;\n      }\n    }\n    const hasTextAfterResult = localOffset < text.length;\n    if (hasTextAfterResult) {\n      chunks.push({ text: text.slice(localOffset), modifiers });\n    }\n    lineOffset += text.length;\n  }\n  return chunks;\n}\nconst renderLink = ({\n  attributes,\n  content\n}) => {\n  const { href, ...props } = attributes;\n  return /* @__PURE__ */ React.createElement(Link, { to: href, ...props }, content);\n};\nfunction LogLine({\n  line,\n  classes,\n  searchText,\n  highlightResultIndex\n}) {\n  const chunks = useMemo(\n    () => calculateHighlightedChunks(line, searchText),\n    [line, searchText]\n  );\n  const elements = useMemo(\n    () => chunks.map(({ text, modifiers, highlight }, index) => (\n      // eslint-disable-next-line react/forbid-elements\n      /* @__PURE__ */ React.createElement(\n        \"span\",\n        {\n          key: index,\n          className: classNames(\n            getModifierClasses(classes, modifiers),\n            highlight !== void 0 && (highlight === highlightResultIndex ? classes.textSelectedHighlight : classes.textHighlight)\n          )\n        },\n        /* @__PURE__ */ React.createElement(Linkify, { options: { render: renderLink } }, text)\n      )\n    )),\n    [chunks, highlightResultIndex, classes]\n  );\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, elements);\n}\n\nfunction LogViewerControls(props) {\n  var _a;\n  const { resultCount, resultIndexStep, toggleShouldFilter } = props;\n  const resultIndex = (_a = props.resultIndex) != null ? _a : 0;\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (event.metaKey || event.ctrlKey || event.altKey) {\n        toggleShouldFilter();\n      } else {\n        resultIndexStep(event.shiftKey);\n      }\n    }\n  };\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, resultCount !== void 0 && /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(IconButton, { size: \"small\", onClick: () => resultIndexStep(true) }, /* @__PURE__ */ React.createElement(ChevronLeftIcon, null)), /* @__PURE__ */ React.createElement(Typography, null, Math.min(resultIndex + 1, resultCount), \"/\", resultCount), /* @__PURE__ */ React.createElement(IconButton, { size: \"small\", onClick: () => resultIndexStep() }, /* @__PURE__ */ React.createElement(ChevronRight, null))), /* @__PURE__ */ React.createElement(\n    TextField,\n    {\n      size: \"small\",\n      variant: \"standard\",\n      placeholder: \"Search\",\n      value: props.searchInput,\n      onKeyPress: handleKeyPress,\n      onChange: (e) => props.setSearchInput(e.target.value)\n    }\n  ), /* @__PURE__ */ React.createElement(IconButton, { size: \"small\", onClick: toggleShouldFilter }, props.shouldFilter ? /* @__PURE__ */ React.createElement(FilterList, { color: \"primary\" }) : /* @__PURE__ */ React.createElement(FilterList, { color: \"disabled\" })));\n}\n\nconst HEADER_SIZE = 40;\nconst useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      background: theme.palette.background.paper\n    },\n    header: {\n      height: HEADER_SIZE,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\"\n    },\n    log: {\n      fontFamily: '\"Monaco\", monospace',\n      fontSize: theme.typography.pxToRem(12)\n    },\n    line: {\n      position: \"relative\",\n      whiteSpace: \"pre\",\n      \"&:hover\": {\n        background: theme.palette.action.hover\n      }\n    },\n    lineSelected: {\n      background: theme.palette.action.selected,\n      \"&:hover\": {\n        background: theme.palette.action.selected\n      }\n    },\n    lineCopyButton: {\n      position: \"absolute\",\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    lineNumber: {\n      display: \"inline-block\",\n      textAlign: \"end\",\n      width: 60,\n      marginRight: theme.spacing(1),\n      cursor: \"pointer\"\n    },\n    textHighlight: {\n      background: alpha(theme.palette.info.main, 0.15)\n    },\n    textSelectedHighlight: {\n      background: alpha(theme.palette.info.main, 0.4)\n    },\n    modifierBold: {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    modifierItalic: {\n      fontStyle: \"italic\"\n    },\n    modifierUnderline: {\n      textDecoration: \"underline\"\n    },\n    modifierForegroundBlack: {\n      color: colors.common.black\n    },\n    modifierForegroundRed: {\n      color: colors.red[500]\n    },\n    modifierForegroundGreen: {\n      color: colors.green[500]\n    },\n    modifierForegroundYellow: {\n      color: colors.yellow[500]\n    },\n    modifierForegroundBlue: {\n      color: colors.blue[500]\n    },\n    modifierForegroundMagenta: {\n      color: colors.purple[500]\n    },\n    modifierForegroundCyan: {\n      color: colors.cyan[500]\n    },\n    modifierForegroundWhite: {\n      color: colors.common.white\n    },\n    modifierForegroundGrey: {\n      color: colors.grey[500]\n    },\n    modifierBackgroundBlack: {\n      background: colors.common.black\n    },\n    modifierBackgroundRed: {\n      background: colors.red[500]\n    },\n    modifierBackgroundGreen: {\n      background: colors.green[500]\n    },\n    modifierBackgroundYellow: {\n      background: colors.yellow[500]\n    },\n    modifierBackgroundBlue: {\n      background: colors.blue[500]\n    },\n    modifierBackgroundMagenta: {\n      background: colors.purple[500]\n    },\n    modifierBackgroundCyan: {\n      background: colors.cyan[500]\n    },\n    modifierBackgroundWhite: {\n      background: colors.common.white\n    },\n    modifierBackgroundGrey: {\n      background: colors.grey[500]\n    }\n  }),\n  { name: \"BackstageLogViewer\" }\n);\n\nfunction applySearchFilter(lines, searchText) {\n  if (!searchText) {\n    return { lines };\n  }\n  const matchingLines = [];\n  const searchResults = [];\n  for (const line of lines) {\n    if (line.text.includes(searchText)) {\n      matchingLines.push(line);\n      let offset = 0;\n      let lineResultIndex = 0;\n      for (; ; ) {\n        const start = line.text.indexOf(searchText, offset);\n        if (start === -1) {\n          break;\n        }\n        searchResults.push({\n          lineNumber: line.lineNumber,\n          lineIndex: lineResultIndex++\n        });\n        offset = start + searchText.length;\n      }\n    }\n  }\n  return {\n    lines: matchingLines,\n    results: searchResults\n  };\n}\nfunction useLogViewerSearch(lines) {\n  var _a;\n  const [searchInput, setSearchInput] = useState(\"\");\n  const searchText = searchInput.toLocaleLowerCase(\"en-US\");\n  const [resultIndex, setResultIndex] = useState(0);\n  const [shouldFilter, toggleShouldFilter] = useToggle(false);\n  const filter = useMemo(\n    () => applySearchFilter(lines, searchText),\n    [lines, searchText]\n  );\n  const searchResult = filter.results ? filter.results[Math.min(resultIndex, filter.results.length - 1)] : void 0;\n  const resultCount = (_a = filter.results) == null ? void 0 : _a.length;\n  const resultIndexStep = (decrement) => {\n    if (decrement) {\n      if (resultCount !== void 0) {\n        const next = Math.min(resultIndex - 1, resultCount - 2);\n        setResultIndex(next < 0 ? resultCount - 1 : next);\n      }\n    } else {\n      if (resultCount !== void 0) {\n        const next = resultIndex + 1;\n        setResultIndex(next >= resultCount ? 0 : next);\n      }\n    }\n  };\n  return {\n    lines: shouldFilter ? filter.lines : lines,\n    searchText,\n    searchInput,\n    setSearchInput,\n    shouldFilter,\n    toggleShouldFilter,\n    resultCount,\n    resultIndex,\n    resultIndexStep,\n    resultLine: searchResult == null ? void 0 : searchResult.lineNumber,\n    resultLineIndex: searchResult == null ? void 0 : searchResult.lineIndex\n  };\n}\n\nfunction useLogViewerSelection(lines) {\n  const errorApi = useApi(errorApiRef);\n  const [sel, setSelection] = useState();\n  const start = sel ? Math.min(sel.start, sel.end) : void 0;\n  const end = sel ? Math.max(sel.start, sel.end) : void 0;\n  const [{ error }, copyToClipboard] = useCopyToClipboard();\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n  return {\n    shouldShowButton(line) {\n      return start === line || end === line;\n    },\n    isSelected(line) {\n      if (!sel) {\n        return false;\n      }\n      return start <= line && line <= end;\n    },\n    setSelection(line, add) {\n      if (add) {\n        setSelection(\n          (s) => s ? { start: s.start, end: line } : { start: line, end: line }\n        );\n      } else {\n        setSelection(\n          (s) => (s == null ? void 0 : s.start) === line && (s == null ? void 0 : s.end) === line ? void 0 : { start: line, end: line }\n        );\n      }\n    },\n    copySelection() {\n      if (sel) {\n        const copyText = lines.slice(Math.min(sel.start, sel.end) - 1, Math.max(sel.start, sel.end)).map((l) => l.chunks.map((c) => c.text).join(\"\")).join(\"\\n\");\n        copyToClipboard(copyText);\n        setSelection(void 0);\n      }\n    }\n  };\n}\n\nfunction RealLogViewer(props) {\n  const classes = useStyles({ classes: props.classes });\n  const listRef = useRef(null);\n  const processor = useMemo(() => new AnsiProcessor(), []);\n  const lines = processor.process(props.text);\n  const search = useLogViewerSearch(lines);\n  const selection = useLogViewerSelection(lines);\n  const location = useLocation();\n  useEffect(() => {\n    if (search.resultLine !== void 0 && listRef.current) {\n      listRef.current.scrollToItem(search.resultLine - 1, \"center\");\n    }\n  }, [search.resultLine]);\n  useEffect(() => {\n    if (location.hash) {\n      const line = parseInt(location.hash.replace(/\\D/g, \"\"), 10);\n      selection.setSelection(line, false);\n    }\n  }, []);\n  const handleSelectLine = (line, event) => {\n    selection.setSelection(line, event.shiftKey);\n  };\n  return /* @__PURE__ */ React.createElement(AutoSizer, null, ({ height, width }) => /* @__PURE__ */ React.createElement(Box, { style: { width, height }, className: classes.root }, /* @__PURE__ */ React.createElement(Box, { className: classes.header }, /* @__PURE__ */ React.createElement(LogViewerControls, { ...search })), /* @__PURE__ */ React.createElement(\n    FixedSizeList,\n    {\n      ref: listRef,\n      className: classes.log,\n      height: (height || 480) - HEADER_SIZE,\n      width: width || 640,\n      itemData: search.lines,\n      itemSize: 20,\n      itemCount: search.lines.length\n    },\n    ({ index, style, data }) => {\n      const line = data[index];\n      const { lineNumber } = line;\n      return /* @__PURE__ */ React.createElement(\n        Box,\n        {\n          style: { ...style },\n          className: classNames(classes.line, {\n            [classes.lineSelected]: selection.isSelected(lineNumber)\n          })\n        },\n        selection.shouldShowButton(lineNumber) && /* @__PURE__ */ React.createElement(\n          IconButton,\n          {\n            \"data-testid\": \"copy-button\",\n            size: \"small\",\n            className: classes.lineCopyButton,\n            onClick: () => selection.copySelection()\n          },\n          /* @__PURE__ */ React.createElement(CopyIcon, { fontSize: \"inherit\" })\n        ),\n        /* @__PURE__ */ React.createElement(\n          \"a\",\n          {\n            role: \"row\",\n            target: \"_self\",\n            href: `#line-${lineNumber}`,\n            className: classes.lineNumber,\n            onClick: (event) => handleSelectLine(lineNumber, event),\n            onKeyPress: (event) => handleSelectLine(lineNumber, event)\n          },\n          lineNumber\n        ),\n        /* @__PURE__ */ React.createElement(\n          LogLine,\n          {\n            line,\n            classes,\n            searchText: search.searchText,\n            highlightResultIndex: search.resultLine === lineNumber ? search.resultLineIndex : void 0\n          }\n        )\n      );\n    }\n  )));\n}\n\nexport { RealLogViewer };\n//# sourceMappingURL=RealLogViewer-ByaGXy8y.esm.js.map\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import { useCallback, useState } from 'react';\nimport { useSyncedRef } from '../useSyncedRef/index.js';\nimport { resolveHookState } from '../util/resolveHookState.js';\nexport function useToggle(initialState = false, ignoreReactEvents = true) {\n    const [state, setState] = useState(initialState);\n    const ignoreReactEventsRef = useSyncedRef(ignoreReactEvents);\n    return [\n        state,\n        useCallback((nextState) => {\n            setState((previousState) => {\n                if (nextState === undefined ||\n                    (ignoreReactEventsRef.current &&\n                        typeof nextState === 'object' &&\n                        (nextState.constructor.name === 'SyntheticBaseEvent' ||\n                            typeof nextState._reactName === 'string'))) {\n                    return !previousState;\n                }\n                return Boolean(resolveHookState(nextState, previousState));\n            });\n        }, []),\n    ];\n}\n","import { useMemo, useRef } from 'react';\nexport function useSyncedRef(value) {\n    const ref = useRef(value);\n    ref.current = value;\n    return useMemo(() => Object.freeze({\n        get current() {\n            return ref.current;\n        },\n    }), []);\n}\n","export function resolveHookState(nextState, previousState) {\n    if (typeof nextState === 'function')\n        return nextState(previousState);\n    return nextState;\n}\n"],"names":["windowObject","window","self","g","cancelFrame","requestFrame","clearTimeoutFn","clearTimeout","setTimeoutFn","setTimeout","cancelAnimationFrameFn","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","requestAnimationFrameFn","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","callback","animationFrameID","timeoutID","AutoSizer","Component","constructor","args","super","this","state","height","props","defaultHeight","scaledHeight","scaledWidth","defaultWidth","width","_autoSizer","_detectElementResize","_parentNode","_resizeObserver","_timeoutId","_onResize","disableHeight","disableWidth","onResize","style","getComputedStyle","paddingLeft","parseFloat","paddingRight","paddingTop","paddingBottom","rect","getBoundingClientRect","offsetHeight","offsetWidth","setState","_setRef","autoSizer","componentDidMount","nonce","parentNode","ownerDocument","defaultView","HTMLElement","ResizeObserverInstance","ResizeObserver","observe","animationKeyframes","animationName","animationStartEvent","animationStyle","checkTriggers","resetTriggers","scrollListener","attachEvent","document","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","__resizeLast__","e","target","className","indexOf","__resizeRAF__","__resizeListeners__","forEach","fn","call","animation","keyframeprefix","domPrefixes","split","startEvents","pfx","elm","createElement","undefined","i","length","toLowerCase","addResizeListener","doc","elementStyle","position","getElementById","css","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","expandTrigger","contractTrigger","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","createDetectElementResize","componentWillUnmount","disconnect","render","children","doNotBailOutOnEmptyChildren","tagName","rest","outerStyle","overflow","childParams","bailoutOnChildren","ref","now","performance","Date","cancelTimeout","size","getScrollbarSize","recalculate","div","body","clientWidth","cachedRTLResult","getRTLOffsetType","outerDiv","direction","innerDiv","innerStyle","defaultItemKey$1","index","data","createListComponent","_ref","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","List","_this","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","itemSize","layout","itemStyleCache","_getItemStyleCache","hasOwnProperty","_offset","isHorizontal","isRtl","offsetHorizontal","left","right","top","_","__","___","_onScrollHorizontal","event","_event$currentTarget","currentTarget","prevState","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","_outerRefSetter","outerRef","current","delay","start","_resetIsScrolling","tick","getDerivedStateFromProps","nextProps","validateSharedProps$1","_proto","prototype","scrollTo","scrollToItem","align","_this$props2","itemCount","scrollbarSize","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$props4","_this$state","_this$props5","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","key","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","defaultProps","_ref2","_ref3","FixedSizeList","_ref4","instanceProps","lastItemOffset","maxOffset","minOffset","middleOffset","round","ceil","floor","_ref5","offset","_ref6","numVisibleItems","_ref7","encodedTlds","encodedUtlds","properties","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","name","groups","addToGroups","t","flags","k","group","State","token","j","jr","jd","accepts","go","input","nextState","regex","test","has","exactOnly","ta","inputs","next","tt","tr","regexp","ts","len","templateState","apply","allFlags","result","c","flagsForToken","WORD","UWORD","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL$1","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","Object","freeze","__proto__","NL","EMOJI","ASCII_LETTER","LETTER","DIGIT","SPACE","EMOJI_VARIATION","EMOJI_JOINER","tlds","utlds","fastts","defaultt","char","slice","decodeTlds","encoded","words","stack","popDigitCount","join","popCount","parseInt","substring","pop","defaults","defaultProtocol","events","format","noop","formatHref","nl2br","rel","validate","truncate","Infinity","attributes","ignoreTags","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","toUpperCase","val","ir","check","get","toString","operator","isCallable","option","getObj","obj","options","assign","MultiToken","value","tokens","v","createTokenClass","Token","p","isLink","toHref","toFormattedString","formatted","toFormattedHref","s","endIndex","toObject","protocol","href","end","toFormattedObject","formattedHref","content","attrs","eventListeners","class","Email","Text","Nl","Url","hasProtocol","makeState","arg","initMultiToken","Multi","startIdx","endIdx","console","warn","INIT","scanner","parser","tokenQueue","pluginQueue","customSchemes","initialized","tokenize","str","Start","Num","Word","UWord","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","tld","utld","sort","a","b","sch","init$2","qsAccepting","concat","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","init$1","init","cursor","multis","textTokens","secondState","multiLength","latestAccepting","sinceAccepts","subtokens","run","iterable","second","first","charCodeAt","stringToArray","replace","charCount","charCursor","tokenLength","charsSinceAccepts","run$1","linkifyReactElement","meta","count","child","elements","elementId","rendered","stringToElements","newProps","Linkify","linkId","prop","as","__defProp","defineProperty","__publicField","enumerable","configurable","writable","__defNormalProp","onlyFirst","pattern","RegExp","ansiRegex","newlineRegex","codeModifiers","fromEntries","entries","m","bold","italic","underline","foreground","background","map","code","modifier","AnsiLine","lineNumber","chunks","text","toLocaleLowerCase","lastChunk","replaceLastChunk","newChunks","AnsiProcessor","modifiers","startingLineNumber","_a","lines","currentModifiers","currentLineNumber","prevIndex","lastIndex","match","exec","chunks2","processText","line","fullText","processCode","_b","process","_c","startsWith","lastLineIndex","lastLine","newLines","processLines","getModifierClasses","classes","classNames","Array","modifierBold","modifierItalic","modifierUnderline","renderLink","to","LogLine","searchText","highlightResultIndex","useMemo","results","includes","searchResults","findSearchResults","lineOffset","resultIndex","chunk","localOffset","localStart","localEnd","highlight","calculateHighlightedChunks","textSelectedHighlight","textHighlight","LogViewerControls","resultCount","resultIndexStep","toggleShouldFilter","IconButton","onClick","ChevronLeft","Typography","ChevronRight","TextField","variant","placeholder","searchInput","onKeyPress","metaKey","ctrlKey","altKey","shiftKey","onChange","setSearchInput","shouldFilter","FilterList","color","HEADER_SIZE","useStyles","makeStyles","theme","root","palette","paper","header","display","alignItems","justifyContent","log","fontFamily","fontSize","typography","pxToRem","whiteSpace","action","hover","lineSelected","selected","lineCopyButton","textAlign","marginRight","spacing","info","main","fontWeight","fontWeightBold","fontStyle","textDecoration","modifierForegroundBlack","black","modifierForegroundRed","modifierForegroundGreen","modifierForegroundYellow","modifierForegroundBlue","modifierForegroundMagenta","modifierForegroundCyan","modifierForegroundWhite","white","modifierForegroundGrey","modifierBackgroundBlack","modifierBackgroundRed","modifierBackgroundGreen","modifierBackgroundYellow","modifierBackgroundBlue","modifierBackgroundMagenta","modifierBackgroundCyan","modifierBackgroundWhite","modifierBackgroundGrey","RealLogViewer","listRef","useRef","search","useState","setResultIndex","initialState","ignoreReactEvents","ignoreReactEventsRef","useSyncedRef","useCallback","previousState","_reactName","Boolean","resolveHookState","useToggle","filter","matchingLines","lineResultIndex","lineIndex","applySearchFilter","searchResult","decrement","resultLine","resultLineIndex","useLogViewerSearch","selection","errorApi","useApi","errorApiRef","sel","setSelection","error","copyToClipboard","useCopyToClipboard","useEffect","post","shouldShowButton","isSelected","add","copySelection","copyText","l","useLogViewerSelection","location","useLocation","hash","handleSelectLine","Box","role"],"sourceRoot":""}